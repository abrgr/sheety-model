{"version":3,"sources":["../../src/lib/presenter.js"],"names":["PresenterRecord","id","type","mapData","arrayData","config","coercer","bind","Presenter","params"],"mappings":";;;;;;AAAA;;AACA;;;;;;;;;;;;AAEA,IAAMA,kBAAkB,uBAAO;AAC7B;AACAC,MAAI,IAFyB;AAG7B;AACAC,QAAM,IAJuB;AAK7B;AACAC,WAAS,oBANoB;AAO7B;AACAC,aAAW,IARkB;AAS7B;AACAC,UAAQ;AAVqB,CAAP,EAWrB,WAXqB,CAAxB;;AAaA,IAAMC,UAAU,iBAAOC,IAAP,CAAY,IAAZ,EAAkB,mBAAQ;AACxCN,MAAI,YAACA,GAAD;AAAA,WAAQ,CAAC,CAACA,GAAF,GAAQ,KAAKA,GAAb,GAAmB,IAA3B;AAAA,GADoC;AAExCC,QAAM,cAACA,KAAD;AAAA,WAAU,CAAC,CAACA,KAAF,GAAU,KAAKA,KAAf,GAAuB,IAAjC;AAAA,GAFkC;AAGxCC,WAAS;AAAA,WAAW,CAAC,CAACA,QAAF,GAAY,mBAAQA,QAAR,CAAZ,GAA+B,IAA1C;AAAA,GAH+B;AAIxCC,aAAW;AAAA,WAAa,CAAC,CAACA,UAAF,GAAe,KAAKA,UAApB,GAAiC,IAA9C;AAAA,GAJ6B;AAKxCC,UAAQ;AAAA,WAAU,CAAC,CAACA,OAAF,GAAW,uBAAOA,OAAP,CAAX,GAA4B,IAAtC;AAAA;AALgC,CAAR,CAAlB,CAAhB;;IAQqBG,S;;;AACnB,qBAAYC,MAAZ,EAAoB;AAAA;;AAAA,iHACZH,QAAQG,MAAR,CADY;AAEnB;;;EAHoCT,e;;kBAAlBQ,S","file":"presenter.js","sourcesContent":["import { fromJS, Record, Map, List } from 'immutable';\nimport coerce from './coerce';\n\nconst PresenterRecord = Record({\n  // string id of the presenter\n  id: null,\n  // type of the presenter\n  type: null,\n  // Map from string keys to formulas intended to be evaluated against spreadsheet data\n  mapData: new Map(),\n  // Array data query\n  arrayData: null,\n  // Arbitrary key/value pairs provided to the presenter\n  config: new Map()\n}, 'Presenter');\n\nconst coercer = coerce.bind(null, new Map({\n  id: (id) => !!id ? ('' + id) : null,\n  type: (type) => !!type ? ('' + type) : null,\n  mapData: mapData => !!mapData ? new Map(mapData) : null,\n  arrayData: arrayData => !!arrayData ? ('' + arrayData) : null,\n  config: config => !!config ? fromJS(config) : null\n}));\n\nexport default class Presenter extends PresenterRecord {\n  constructor(params) {\n    super(coercer(params));\n  }\n}\n"]}