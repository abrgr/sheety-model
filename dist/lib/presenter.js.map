{"version":3,"sources":["../../src/lib/presenter.js"],"names":["PresenterRecord","id","mapDataQuery","arrayDataQuery","config","coercer","bind","Presenter","params"],"mappings":";;;;;;AAAA;;AACA;;;;;;;;;;;;AAEA,IAAMA,kBAAkB,uBAAO;AAC7B;AACAC,MAAI,IAFyB;AAG7B;AACAC,gBAAc,oBAJe;AAK7B;AACAC,kBAAgB,IANa;AAO7B;AACAC,UAAQ;AARqB,CAAP,EASrB,WATqB,CAAxB;;AAWA,IAAMC,UAAU,iBAAOC,IAAP,CAAY,IAAZ,EAAkB,mBAAQ;AACxCL,MAAI,YAACA,GAAD;AAAA,WAAQ,CAAC,CAACA,GAAF,GAAQ,KAAKA,GAAb,GAAmB,IAA3B;AAAA,GADoC;AAExCC,gBAAc;AAAA,WAAgB,CAAC,CAACA,aAAF,GAAiB,mBAAQA,aAAR,CAAjB,GAAyC,IAAzD;AAAA,GAF0B;AAGxCC,kBAAgB;AAAA,WAAkB,CAAC,CAACA,eAAF,GAAoB,KAAKA,eAAzB,GAA2C,IAA7D;AAAA,GAHwB;AAIxCC,UAAQ;AAAA,WAAU,CAAC,CAACA,OAAF,GAAW,mBAAQA,OAAR,CAAX,GAA6B,IAAvC;AAAA;AAJgC,CAAR,CAAlB,CAAhB;;IAOqBG,S;;;AACnB,qBAAYC,MAAZ,EAAoB;AAAA;;AAAA,iHACZH,QAAQG,MAAR,CADY;AAEnB;;;EAHoCR,e;;kBAAlBO,S","file":"presenter.js","sourcesContent":["import { Record, Map, List } from 'immutable';\nimport coerce from './coerce';\n\nconst PresenterRecord = Record({\n  // string id of the presenter\n  id: null,\n  // Map from string keys to formulas intended to be evaluated against spreadsheet data\n  mapDataQuery: new Map(),\n  // Array data query\n  arrayDataQuery: null,\n  // Arbitrary key/value pairs provided to the presenter\n  config: new Map()\n}, 'Presenter');\n\nconst coercer = coerce.bind(null, new Map({\n  id: (id) => !!id ? ('' + id) : null,\n  mapDataQuery: mapDataQuery => !!mapDataQuery ? new Map(mapDataQuery) : null,\n  arrayDataQuery: arrayDataQuery => !!arrayDataQuery ? ('' + arrayDataQuery) : null,\n  config: config => !!config ? new Map(config) : null\n}));\n\nexport default class Presenter extends PresenterRecord {\n  constructor(params) {\n    super(coercer(params));\n  }\n}\n"]}